plugins {
    id 'java-library'
    id 'maven-publish'
    id 'java'
}
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

group = 'by.kihtenkoolga'
version = '1.3.5'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

java {
    withJavadocJar()
    withSourcesJar()
}

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
    dependsOn javadocJar, sourcesJar
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.compileClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

test {
    useJUnitPlatform()
    maxHeapSize = '1G'

    testLogging {
        events "PASSED", "SKIPPED", "FAILED", "STANDARD_OUT", "STANDARD_ERROR"
    }

    filter {
        includeTestsMatching "${project.group}.*"
    }
}

reporting.baseDir = "my-reports"
tasks.register('showDirs') {
    doLast {
        logger.quiet(rootDir.toPath().relativize(project.reportsDir.toPath()).toString())
    }
}

publishing {
    description 'Upload jar to local artifactory'
    group "${project.group}"

    publications {
        myLibrary(MavenPublication) {
            from components.java
        }
    }

    repositories {
        mavenLocal()
    }
}
